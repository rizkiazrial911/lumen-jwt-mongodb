{
    "openapi": "3.0.0",
    "info": {
        "title": "Example API",
        "contact": {
            "name": "Support Team",
            "email": "support@example.com"
        },
        "version": "1.0"
    },
    "paths": {
        "/api/login": {
            "post": {
                "tags": [
                    "Credentials"
                ],
                "operationId": "/api/login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Returns valid credential"
                    },
                    "400": {
                        "description": "Error: Bad request. When required parameters were not supplied."
                    },
                    "500": {
                        "description": "Error: Server error."
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Credentials"
                ],
                "operationId": "/api/register",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Success register user",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Error: Bad request. When required parameters were not supplied."
                    },
                    "500": {
                        "description": "Error: Server error."
                    }
                }
            }
        },
        "/api/check_login": {
            "get": {
                "tags": [
                    "Credentials"
                ],
                "operationId": "/api/check_login",
                "responses": {
                    "200": {
                        "description": "Returns message authorization"
                    },
                    "400": {
                        "description": "Error: Bad request. When required parameters were not supplied."
                    },
                    "401": {
                        "description": "Error: Unauthorized. when token is not valid."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/refresh_token": {
            "get": {
                "tags": [
                    "Credentials"
                ],
                "operationId": "/api/refresh_token",
                "responses": {
                    "200": {
                        "description": "Returns new token"
                    },
                    "400": {
                        "description": "Error: Bad request. When required parameters were not supplied."
                    },
                    "401": {
                        "description": "Error: Unauthorized. when token is not valid."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/logout": {
            "get": {
                "tags": [
                    "Credentials"
                ],
                "operationId": "/api/logout",
                "responses": {
                    "200": {
                        "description": "Returns message success logout"
                    },
                    "400": {
                        "description": "Error: Bad request. When required parameters were not supplied."
                    },
                    "401": {
                        "description": "Error: Unauthorized. when token is not valid."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/item": {
            "get": {
                "tags": [
                    "CRUD Via MongoDB"
                ],
                "operationId": "get_list",
                "responses": {
                    "200": {
                        "description": "Returns message list item"
                    },
                    "400": {
                        "description": "Error: Bad request. When required parameters were not supplied."
                    },
                    "401": {
                        "description": "Error: Unauthorized. when token is not valid."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "CRUD Via MongoDB"
                ],
                "operationId": "store",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreProjectRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Returns message success create item"
                    },
                    "400": {
                        "description": "Error: Bad request. When required parameters were not supplied."
                    },
                    "500": {
                        "description": "Error: Server error."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/item/{id}": {
            "get": {
                "tags": [
                    "CRUD Via MongoDB"
                ],
                "operationId": "get_detail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "A id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns message list item"
                    },
                    "400": {
                        "description": "Error: Bad request. When required parameters were not supplied."
                    },
                    "401": {
                        "description": "Error: Unauthorized. when token is not valid."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "CRUD Via MongoDB"
                ],
                "operationId": "update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id items",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreProjectRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Returns message success update item"
                    },
                    "400": {
                        "description": "Error: Bad request. When required parameters were not supplied."
                    },
                    "500": {
                        "description": "Error: Server error."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "CRUD Via MongoDB"
                ],
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id items",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Returns message success delete item"
                    },
                    "400": {
                        "description": "Error: Bad request. When required parameters were not supplied."
                    },
                    "500": {
                        "description": "Error: Server error."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/firebase": {
            "get": {
                "tags": [
                    "CRUD Via Firebase"
                ],
                "operationId": "index-firebase",
                "responses": {
                    "200": {
                        "description": "Returns message list item"
                    },
                    "400": {
                        "description": "Error: Bad request. When required parameters were not supplied."
                    },
                    "401": {
                        "description": "Error: Unauthorized. when token is not valid."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "CRUD Via Firebase"
                ],
                "operationId": "store-firebase",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreProjectRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Returns Success create item on firebase"
                    },
                    "400": {
                        "description": "Error: Bad request. When required parameters were not supplied."
                    },
                    "500": {
                        "description": "Error: Server error."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        },
        "/api/firebase/{id}": {
            "get": {
                "tags": [
                    "CRUD Via Firebase"
                ],
                "operationId": "detail-firebase",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "A id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns message list item"
                    },
                    "400": {
                        "description": "Error: Bad request. When required parameters were not supplied."
                    },
                    "401": {
                        "description": "Error: Unauthorized. when token is not valid."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "CRUD Via Firebase"
                ],
                "operationId": "update",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id items",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreProjectRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Returns message success update item"
                    },
                    "400": {
                        "description": "Error: Bad request. When required parameters were not supplied."
                    },
                    "500": {
                        "description": "Error: Server error."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "CRUD Via Firebase"
                ],
                "operationId": "delete",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Id items",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Returns message success delete item"
                    },
                    "400": {
                        "description": "Error: Bad request. When required parameters were not supplied."
                    },
                    "500": {
                        "description": "Error: Server error."
                    }
                },
                "security": [
                    {
                        "Authorization": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "LoginRequest": {
                "title": "Store Item request",
                "description": "Store Item request body data",
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "title": "email",
                        "description": "Email user",
                        "type": "string",
                        "example": "user@mail.com"
                    },
                    "password": {
                        "title": "password",
                        "description": "Password User",
                        "type": "string",
                        "example": "secret"
                    }
                },
                "type": "object"
            },
            "RegisterRequest": {
                "title": "Store Item request",
                "description": "Store Item request body data",
                "required": [
                    "name",
                    "email",
                    "password"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name User",
                        "type": "string",
                        "example": "John Adams"
                    },
                    "email": {
                        "title": "email",
                        "description": "Email user",
                        "type": "string",
                        "example": "user@mail.com"
                    },
                    "password": {
                        "title": "password",
                        "description": "Password User",
                        "type": "string",
                        "example": "secret"
                    }
                },
                "type": "object"
            },
            "StoreProjectRequest": {
                "title": "Store Project request",
                "description": "Store Project request body data",
                "required": [
                    "title",
                    "price"
                ],
                "properties": {
                    "title": {
                        "title": "title",
                        "description": "Title item",
                        "type": "string",
                        "example": "Indomie Goreng"
                    },
                    "price": {
                        "title": "price",
                        "description": "Price of item",
                        "type": "string",
                        "example": "1000"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "Authorization": {
                "type": "http",
                "description": "Login with email and password to get the authentication token",
                "name": "Token based Based",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    }
}